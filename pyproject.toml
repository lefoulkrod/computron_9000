[project]
name = "computron-9000"
version = "0.1.0"
description = "A modern, extensible AI assistant platform with a responsive chat UI and Python backend."
requires-python = ">=3.12"
dependencies = [
    "litellm",
    "aiohttp",
    "pydantic",
    "playwright",
    "playwright==1.52.0",
    "setuptools>=65.0.0",
    "beautifulsoup4",
    "podman==5.4.0.1",
    "ollama>=0.5.1",
    "cachetools>=5.5.2",
    "python-dotenv>=1.1.0",
    "asyncpraw>=7.8.1",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-watch",
]
dev = [
    "black",
    "ruff",
    "mypy",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["agents*", "tools*", "utils*", "models*", "server*", "config*"]
exclude = ["tests*"]

[tool.uv]
# uv-specific settings can go here

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit (security)
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "RET", # flake8-return
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "S101",  # assert used (fine for tests)
    "T201",  # print found (sometimes needed for debugging)
    "S603",  # subprocess calls (needed for some tools)
    "S607",  # starting process with partial executable path
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101", "ARG", "S106"]  # Allow asserts and unused args in tests

[tool.ruff.lint.isort]
known-first-party = ["agents", "tools", "utils", "models", "server", "config"]
force-single-line = false
combine-as-imports = true
# Import sections in order
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

# Per-module options
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = ["playwright.*", "podman.*", "ollama.*", "asyncpraw.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]  
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests", 
    "slow: marks tests as slow running",
]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    ".venv/*", 
    "__pycache__/*",
    "*.pyc",
    "*/migrations/*",
    "*/venv/*",
    "*/virtualenvs/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
precision = 2
show_missing = true